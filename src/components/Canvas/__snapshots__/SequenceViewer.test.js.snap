// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should fire an event on mouseclick 1`] = `
<PropsToReduxComponent
  backgroundColor="red"
  colorScheme="clustal"
  engine="canvas"
  height={200}
  sequences={
    Array [
      Object {
        "name": "sequence 1",
        "sequence": "MEEPQSDPSIEP-PLSQETFSDLWKLLPENNVLSPLPS-QA-VDDLMLSPDDLAQWLTED",
      },
      Object {
        "name": "sequence 2",
        "sequence": "MEEPQSDLSIEL-PLSQETFSDLWKLLPPNNVLSTLPS-SDSIEE-LFLSENVAGWLEDP",
      },
      Object {
        "name": "sequence 3",
        "sequence": "MEEPQSDLSIEL-PLSQETFSDLWKLLPPNNVLSTLPS-SDSIEE-LFLSENVAGWLEDP",
      },
      Object {
        "name": "sequence 4",
        "sequence": "MEEPQSDLSIEL-PLSQETFSDLWKLLPPNNVLSTLPS-SDSIEE-LFLSENVAGWLEDP",
      },
      Object {
        "name": "sequence 5",
        "sequence": "MEEPQSD--IEL-PLSEETFSDLWWPLPPNNVLSTLPS-SDSIEE-LFLSENVAGWLEDP",
      },
      Object {
        "name": "sequence 6",
        "sequence": "MEEPQEDLSSSL-PLSQETFSDLWKLLPPNNVLSTLPS-SDSIEE-LFLSENVAGWLEDP",
      },
      Object {
        "name": "sequence 7",
        "sequence": "MEEPQ---SISE-PLSQETFSDLWKLLPPNNVLSTLPS-SDSIEE---LSENVAGWLEDP",
      },
    ]
  }
  tileHeight={20}
  tileWidth={20}
  width={400}
>
  <MSAViewerComponent
    msaStore={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        }
      }
    >
      <div>
        <Connect(SequenceViewerComponent)
          onResidueClick={[MockFunction]}
        >
          <SequenceViewerComponent
            border={false}
            borderColor="black"
            borderWidth={1}
            cacheElements={20}
            colorScheme={
              ColorScheme {
                "scheme": StaticSchemeClass {
                  "defaultColor": "#ffffff",
                  "getColor": [Function],
                  "map": Object {
                    "A": "orange",
                    "B": "#fff",
                    "C": "green",
                    "D": "red",
                    "E": "red",
                    "F": "blue",
                    "G": "orange",
                    "Gap": "#fff",
                    "H": "red",
                    "I": "green",
                    "J": "#fff",
                    "K": "red",
                    "L": "green",
                    "M": "green",
                    "N": "#fff",
                    "O": "#fff",
                    "P": "orange",
                    "Q": "#fff",
                    "R": "red",
                    "S": "orange",
                    "T": "orange",
                    "U": "#fff",
                    "V": "green",
                    "W": "blue",
                    "X": "#fff",
                    "Y": "blue",
                    "Z": "#fff",
                  },
                  "type": "static",
                },
              }
            }
            dispatch={[Function]}
            fullHeight={140}
            fullWidth={1200}
            height={140}
            nrXTiles={21}
            nrYTiles={11}
            onResidueClick={[MockFunction]}
            overflow="hidden"
            overflowX="auto"
            overflowY="auto"
            scrollBarPositionX="bottom"
            scrollBarPositionY="right"
            sequences={
              Object {
                "length": 7,
                "maxLength": 60,
                "raw": Array [
                  Object {
                    "name": "sequence 1",
                    "sequence": "MEEPQSDPSIEP-PLSQETFSDLWKLLPENNVLSPLPS-QA-VDDLMLSPDDLAQWLTED",
                  },
                  Object {
                    "name": "sequence 2",
                    "sequence": "MEEPQSDLSIEL-PLSQETFSDLWKLLPPNNVLSTLPS-SDSIEE-LFLSENVAGWLEDP",
                  },
                  Object {
                    "name": "sequence 3",
                    "sequence": "MEEPQSDLSIEL-PLSQETFSDLWKLLPPNNVLSTLPS-SDSIEE-LFLSENVAGWLEDP",
                  },
                  Object {
                    "name": "sequence 4",
                    "sequence": "MEEPQSDLSIEL-PLSQETFSDLWKLLPPNNVLSTLPS-SDSIEE-LFLSENVAGWLEDP",
                  },
                  Object {
                    "name": "sequence 5",
                    "sequence": "MEEPQSD--IEL-PLSEETFSDLWWPLPPNNVLSTLPS-SDSIEE-LFLSENVAGWLEDP",
                  },
                  Object {
                    "name": "sequence 6",
                    "sequence": "MEEPQEDLSSSL-PLSQETFSDLWKLLPPNNVLSTLPS-SDSIEE-LFLSENVAGWLEDP",
                  },
                  Object {
                    "name": "sequence 7",
                    "sequence": "MEEPQ---SISE-PLSQETFSDLWKLLPPNNVLSTLPS-SDSIEE---LSENVAGWLEDP",
                  },
                ],
              }
            }
            showModBar={false}
            textColor="black"
            textFont="18px Arial"
            tileHeight={20}
            tileWidth={20}
            width={400}
            xGridSize={10}
            yGridSize={10}
          >
            <div
              height={140}
              style={
                Object {
                  "cursor": "grab",
                  "height": 140,
                  "position": "relative",
                  "width": 400,
                }
              }
              width={400}
            >
              <canvas
                height={140}
                style={
                  Object {
                    "left": 0,
                    "position": "absolute",
                    "top": 0,
                  }
                }
                width={400}
              >
                Your browser does not seem to support HTML5 canvas.
              </canvas>
              <canvas
                height={140}
                style={
                  Object {
                    "left": 0,
                    "position": "absolute",
                    "top": 0,
                  }
                }
                width={400}
              >
                Your browser does not seem to support HTML5 canvas.
              </canvas>
              <FakeScroll
                fullHeight={140}
                fullWidth={1200}
                height={140}
                overflow="hidden"
                overflowX="auto"
                overflowY="auto"
                positionX="bottom"
                positionY="right"
                scrollBarWidth={5}
                width={400}
              >
                <div />
              </FakeScroll>
            </div>
          </SequenceViewerComponent>
        </Connect(SequenceViewerComponent)>
      </div>
    </Provider>
  </MSAViewerComponent>
</PropsToReduxComponent>
`;
